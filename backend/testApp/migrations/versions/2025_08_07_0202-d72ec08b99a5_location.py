"""location

Revision ID: d72ec08b99a5
Revises: 2acc94137013
Create Date: 2025-08-07 02:02:06.191659

"""

from typing import Sequence, Union
from sqlalchemy import text
from alembic import op
import sqlalchemy as sa
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = "d72ec08b99a5"
down_revision: Union[str, None] = "2acc94137013"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(
                geometry_type="POINT",
                srid=4326,
                dimension=2,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    conn = op.get_bind()
    result = conn.execute(
        text("SELECT 1 FROM pg_indexes WHERE indexname = 'idx_user_locations_geom'")
    ).scalar()

    if not result:
        op.create_index(
            "idx_user_locations_geom",
            "user_locations",
            ["geom"],
            postgresql_using="gist"
        )
    op.create_table(
        "usersession",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.Column("exp", sa.DateTime(), nullable=False),
        sa.Column("iat", sa.DateTime(), nullable=False),
        sa.Column("is_blacklisted", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("usersession")
    op.drop_index(
        "idx_user_locations_geom",
        table_name="user_locations",
        postgresql_using="gist",
    )
    op.drop_table("user_locations")
    # ### end Alembic commands ###
